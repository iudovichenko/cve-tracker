import string


class SafeFormatter(string.Formatter):
    def __init__(self, missing='<?>', bad_format='<!>'):
        super().__init__()
        self.missing = missing
        self.bad_format = bad_format

    def get_field(self, field_name, args, kwargs):
        try:
            value = super().get_field(field_name, args, kwargs)
        except: # noqa
            value = None, field_name
        return value

    def format_field(self, value, format_spec):
        if value is None:
            return self.missing

        try:
            return super().format_field(value, format_spec)
        except ValueError:
            if self.bad_format:
                return self.bad_format
            raise
        except: # noqa
            raise
